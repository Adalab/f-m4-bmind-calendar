{"version":3,"sources":["images/logo-bmind-holidays.png","images/logo-bmind.png","components/Header/index.js","components/UserHoliday/index.js","components/YearlyCalendar/Demo.js","components/Calendar/index.js","components/Select/index.js","components/Main/index.js","components/Footer/index.js","components/HomePage/index.js","services/fetchService.js","components/App/App.js","components/YearlyCalendar/Day.js","components/YearlyCalendar/utils.js","components/YearlyCalendar/Month.js","components/YearlyCalendar/Calendar.js","components/YearlyCalendar/CalendarControls.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","logUser","react_default","a","createElement","className","src","logoBmindHolidays","alt","concat","UserHoliday","selectedUser","daysLeft","parseInt","vacation_days","vacations_used","Demo","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","today","moment","state","year","selectedDay","selectedRange","add","showDaysOfWeek","showTodayBtn","showWeekSeparators","selectRange","firstDayOfWeek","customCSSclasses","setState","prevState","date","start","end","forceFullWeeks","event","target","value","_this2","_this$state","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","periods","Symbol","iterator","next","done","period","id","start_date","end_date","err","return","lib","showTodayButton","onPrevYear","onNextYear","goToToday","onPickDate","datePicked","onPickRange","rangePicked","customClasses","React","Component","Calendar","YearlyCalendar_Demo","Select","usersData","handlerChangeSelect","onChange","map","item","key","name","Main","components_UserHoliday","components_Select","components_Calendar","Footer","href","rel","logoBmind","HomePage","react","components_Header","components_Main","components_Footer","fetchService","fetch","then","response","json","App","isFetching","bind","assertThisInitialized","data","fetchUsers","currentIdUser","newUser","find","components_HomePage","Day","onClick","onHover","_this$props","dayClicked","day","_this$props2","dayHovered","_this$props3","classes","onMouseEnter","defaultProps","range","stop","step","length","Math","max","ceil","Array","idx","selectingRange","Month","nextProps","selectingRangeStart","month","selectingRangeEnd","oldRangeStart","oldRangeEnd","_ref","newRangeStart","newRangeEnd","_ref2","_ref3","_ref4","_ref5","_ref6","monthStart","prevMonthDaysCount","weekday","numberOfDays","daysInMonth","days","forEach","i","push","isBefore","_ref7","_ref8","slicedToArray","isBetween","isSame","Function","keys","k","obj","indexOf","format","d","startDate","endDate","YearlyCalendar_Day","isValid","join","_this$props4","renderMonthDays","hoveredDay","charAt","months","YearlyCalendar_Month","assign","renderDaysOfWeek","CalendarControls","todayButton","__webpack_exports__","YearlyCalendar_Calendar","YearlyCalendar_CalendarControls","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b7e85174.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-bmind-holidays.d4acb251.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-bmind.b33ac75d.png\";","import React from \"react\";\nimport \"./styles.scss\";\nimport logoBmindHolidays from \"../../images/logo-bmind-holidays.png\";\nimport PropTypes from \"prop-types\";\n\nfunction Header(props) {\n  const { logUser } = props;\n  return (\n    <header className=\"Header\">\n      <img src={logoBmindHolidays} alt=\"logo Bmind\" className=\"Header__image\" />\n      <p className=\"Header__wellcome\">{`Hola, ${logUser}`}</p>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  logUser: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport './styles.scss';\nimport PropTypes from \"prop-types\";\n\nfunction UserHoliday(props) {\n  const { selectedUser } = props;\n  const totalDays = parseInt(selectedUser.vacation_days);\n  const usedDays = parseInt(selectedUser.vacations_used);\n  const daysLeft = totalDays - usedDays;\n  return (\n    <div className='info-holidays'>\n      <ul className='info-holidays__days'>\n        <li>Vacaciones totales: {selectedUser.vacation_days}</li>\n        <li>Vacaciones usadas: {selectedUser.vacations_used}</li>\n        <li>\n          Vacaciones disponibles: {daysLeft}\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nUserHoliday.propTypes = {\n  selectedUser: PropTypes.object.isRequired\n};\n\nexport default UserHoliday;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Calendar, CalendarControls } from \"react-yearly-calendar\";\n// import safeEval from 'notevil';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    const today = moment();\n    this.state = {\n      year: today.year(),\n      selectedDay: today,\n      selectedRange: [today, moment(today).add(10, \"day\")],\n      showDaysOfWeek: true,\n      showTodayBtn: true,\n      showWeekSeparators: true,\n      selectRange: true,\n      firstDayOfWeek: 0, // sunday\n      customCSSclasses : {}\n    };\n \n \n  }\n\n  // updateClasses() {\n  //   const { customCSSclasses } = this.state;\n    // const input = this.customClassesInput.value;\n    // const context = { customCSSclasses, moment };\n\n    // try {\n    //   safeEval(input, context);\n\n    //   const nextCustomCSSclasses = context.customCSSclasses;\n    //   this.setState({\n    //     customCSSclasses: nextCustomCSSclasses,\n    //     customClassesError: false\n    //   });\n    // } catch (e) {\n    //   this.setState({\n    //     customClassesError: true\n    //   });\n    //   throw e;\n    // }\n  // }\n\n  onPrevYear() {\n    this.setState(prevState => ({\n      year: prevState.year - 1\n    }));\n  }\n\n  onNextYear() {\n    this.setState(prevState => ({\n      year: prevState.year + 1\n    }));\n  }\n\n  goToToday() {\n    const today = moment();\n\n    this.setState({\n      selectedDay: today,\n      selectedRange: [today, moment(today).add(15, \"day\")],\n      year: today.year()\n    });\n  }\n\n  datePicked(date) {\n    this.setState({\n      selectedDay: date,\n      selectedRange: [date, moment(date).add(15, \"day\")]\n    });\n  }\n\n  rangePicked(start, end) {\n    this.setState({\n      selectedRange: [start, end],\n      selectedDay: start\n    });\n  }\n\n  toggleShowDaysOfWeek() {\n    this.setState(prevState => ({\n      showDaysOfWeek: !prevState.showDaysOfWeek\n    }));\n  }\n\n  toggleForceFullWeeks() {\n    this.setState(prevState => ({\n      showDaysOfWeek: true,\n      forceFullWeeks: !prevState.forceFullWeeks\n    }));\n  }\n\n  toggleShowTodayBtn() {\n    this.setState(prevState => ({\n      showTodayBtn: !prevState.showTodayBtn\n    }));\n  }\n\n  toggleShowWeekSeparators() {\n    this.setState(prevState => ({\n      showWeekSeparators: !prevState.showWeekSeparators\n    }));\n  }\n\n  toggleSelectRange() {\n    this.setState(prevState => ({\n      selectRange: !prevState.selectRange\n    }));\n  }\n\n  selectFirstDayOfWeek(event) {\n    this.setState({\n      firstDayOfWeek: parseInt(event.target.value, 10)\n    });\n  }\n\n  render() {\n    let {\n      year,\n      showTodayBtn,\n      selectedDay,\n      showDaysOfWeek,\n      forceFullWeeks,\n      showWeekSeparators,\n      firstDayOfWeek,\n      selectRange,\n      selectedRange,\n      customCSSclasses\n    } = this.state;\n\n    customCSSclasses = {};\n\n    for (let period of this.props.selectedUser.periods) {\n      const name = \"periods \" + period.id;\n      customCSSclasses[name] = {\n        start: period.start_date,\n        end: period.end_date\n      };\n    }\n   \n\n    return (\n      <div>\n        <div id=\"calendar\">\n          <CalendarControls\n            year={year}\n            showTodayButton={showTodayBtn}\n            onPrevYear={() => this.onPrevYear()}\n            onNextYear={() => this.onNextYear()}\n            goToToday={() => this.goToToday()}\n          />\n          <Calendar\n            year={year}\n            selectedDay={selectedDay}\n            showDaysOfWeek={showDaysOfWeek}\n            forceFullWeeks={forceFullWeeks}\n            showWeekSeparators={showWeekSeparators}\n            firstDayOfWeek={firstDayOfWeek}\n            selectRange={selectRange}\n            selectedRange={selectedRange}\n            onPickDate={date => this.datePicked(date)}\n            onPickRange={(start, end) => this.rangePicked(start, end)}\n            customClasses={customCSSclasses}\n          />\n        </div>\n\n        {/* <h5>\n          Proudly brought to you by <a href=\"http://belka.us/en\">Belka</a>\n        </h5> */}\n\n        {/* <div className=\"options\">\n          <b>Demo Options</b>\n          <br />\n          <ul>\n            <li>\n              <input\n                id=\"showDaysOfWeek\"\n                type=\"checkbox\"\n                checked={showDaysOfWeek}\n                onChange={() => this.toggleShowDaysOfWeek()}\n              />\n              <label htmlFor=\"showDaysOfWeek\">Show days of week</label>\n            </li>\n            <li>\n              <input\n                id=\"forceFullWeeks\"\n                type=\"checkbox\"\n                checked={forceFullWeeks}\n                onChange={() => this.toggleForceFullWeeks()}\n              />\n              <label htmlFor=\"forceFullWeeks\">Force full weeks</label>\n            </li>\n            <li>\n              <input\n                id=\"showTodayBtn\"\n                type=\"checkbox\"\n                checked={showTodayBtn}\n                onChange={() => this.toggleShowTodayBtn()}\n              />\n              <label htmlFor=\"showTodayBtn\">Show &apos;Today&apos; button</label>\n            </li>\n            <li>\n              <input\n                id=\"showWeekSeparators\"\n                type=\"checkbox\"\n                checked={showWeekSeparators}\n                onChange={() => this.toggleShowWeekSeparators()}\n              />\n              <label htmlFor=\"showWeekSeparators\">Show week separators</label>\n            </li>\n            <li>\n              <label htmlFor=\"firstDayOfWeek\">First day of week</label>\n              <select id=\"firstDayOfWeek\" value={firstDayOfWeek} onChange={e => this.selectFirstDayOfWeek(e)}>\n                {[0, 1, 2, 3, 4, 5, 6].map(i => (\n                  <option key={i} value={i}>\n                    {moment()\n                      .weekday(i)\n                      .format('ddd')}\n                  </option>\n                ))}\n              </select>\n            </li>\n            <li>\n              <input id=\"selectRange\" type=\"checkbox\" checked={selectRange} onChange={() => this.toggleSelectRange()} />\n              <label htmlFor=\"selectRange\">Select Date range</label>\n            </li>\n          </ul>\n          <br />\n          <i>All these options are available as Calendar props.</i>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default Demo;\n","import React from 'react';\nimport './styles.scss';\nimport Demo from '../YearlyCalendar/Demo';\n\nfunction Calendar(props){\n    return (\n        <div>\n                <Demo selectedUser={props.selectedUser}/>\n        </div>\n    )\n}\n\nexport default Calendar;","import React from 'react';\nimport './styles.scss';\n\nfunction Select(props) {\n    const { usersData, handlerChangeSelect } = props;\n    return (\n        <div>\n            <select className='btn-select' onChange={handlerChangeSelect} >\n                {usersData.map(item => {\n                    return (\n                        <option value={item.id} key={item.id}  >\n                            {item.name}\n                        </option>)\n                })}\n                {/* selected={item.id === selectedUser.id} */}\n            </select>\n        </div>\n    )\n}\n\nexport default Select;","import React from 'react';\nimport './styles.scss';\nimport UserHoliday from '../UserHoliday';\nimport Calendar from '../Calendar';\nimport Select from '../Select';\nimport PropTypes from \"prop-types\";\n\nfunction Main(props) {\n    const { selectedUser, usersData, handlerChangeSelect } = props;\n    return (\n        <main className=\"Main\">\n            <section className='content-info-filter'>\n                <UserHoliday selectedUser={selectedUser} />\n                <Select usersData={usersData} handlerChangeSelect={handlerChangeSelect} selectedUser={selectedUser} />\n            </section>\n            <Calendar selectedUser={selectedUser}/>\n        </main>\n    );\n}\n\nMain.propTypes = {\n    selectedUser: PropTypes.object.isRequired\n};\n\nexport default Main;\n","import React from \"react\";\nimport \"./styles.scss\";\nimport logoBmind from \"../../images/logo-bmind.png\";\n\nfunction Footer() {\n  return (\n    <footer className=\"Footer\">\n      <p className=\"Footer__copyright\">Adalabers © 2019</p>\n      <a href=\"https://www.bmind.es/es/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={logoBmind} alt=\"logo Bmind\" className=\"Footer__image\" />\n      </a>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Fragment } from 'react';\nimport './styles.scss';\nimport Header from '../Header';\nimport Main from '../Main';\nimport Footer from '../Footer';\nimport PropTypes from \"prop-types\";\n\n\nfunction HomePage(props) {\n  const { selectedUser, usersData, handlerChangeSelect } = props;\n  const logUser = usersData[0].name;\n  return (\n    <Fragment>\n      <Header logUser={logUser} />\n      <Main selectedUser={selectedUser} usersData={usersData} handlerChangeSelect={handlerChangeSelect} />\n      <Footer />\n    </Fragment>\n  );\n}\n\nHomePage.propTypes = {\n  selectedUser: PropTypes.object.isRequired\n};\n\nexport default HomePage;\n","\n\nfunction fetchService(){\n    const url = 'https://adalab.bmind.es/api/users';\n    return (    fetch(url)\n      .then(response => \n          response.json())\n    )\n}\n\nexport default fetchService;","import React from 'react';\nimport './App.scss';\nimport '../HomePage';\nimport HomePage from '../HomePage';\nimport fetchService from '../../services/fetchService';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usersData: [],\n      selectedUser: {},\n      isFetching: true\n    };\n    this.handlerChangeSelect = this.handlerChangeSelect.bind(this);\n\n  }\n\n  fetchUsers() {\n    fetchService().then(data => {\n      this.setState({\n        usersData: data,\n        selectedUser: data[0],\n        isFetching: false,\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n  }\n\n\n  handlerChangeSelect(event) {\n    const currentIdUser = event.target.value;\n    const newUser = this.state.usersData.find(item => parseInt(currentIdUser) === item.id);\n\n    this.setState({\n      selectedUser: newUser\n\n    })\n\n  }\n\n  render() {\n    const { selectedUser, isFetching, usersData } = this.state;\n    return (\n      <div className='App fetching'>\n        {isFetching\n          ?\n          'Loading...'\n          :\n          <HomePage\n            selectedUser={selectedUser}\n            usersData={usersData}\n            handlerChangeSelect={this.handlerChangeSelect}\n          />\n        }\n      </div>\n    );\n  }\n}\nexport default App;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { momentObj } from 'react-moment-proptypes';\n\nconst propTypes = {\n  classes: PropTypes.string,\n  dayClicked: PropTypes.func.isRequired,\n  dayHovered: PropTypes.func.isRequired,\n  day: momentObj\n};\n\nconst defaultProps = {\n  classes: '',\n  day: null\n};\n\nclass Day extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n    this.onHover = this.onHover.bind(this);\n  }\n\n  onClick() {\n    const { dayClicked, day } = this.props;\n    dayClicked(day);\n  }\n\n  onHover() {\n    const { dayHovered, day } = this.props;\n    dayHovered(day);\n  }\n\n  render() {\n    const { classes, day } = this.props;\n    return (\n      <td onClick={this.onClick} onMouseEnter={this.onHover} className={classes}>\n        <span className=\"day-number\">{day === null ? '' : day.date()}</span>\n      </td>\n    );\n  }\n}\n\nDay.propTypes = propTypes;\nDay.defaultProps = defaultProps;\n\nexport default Day;","/* eslint-disable */\n// Grabbed from the underscore.js source code (https://github.com/jashkenas/underscore/blob/master/underscore.js#L691)\nexport function range(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n  \n    const length = Math.max(Math.ceil((stop - start) / step), 0);\n    const range = Array(length);\n  \n    for (let idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n  \n    return range;\n  }","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { momentObj } from 'react-moment-proptypes';\nimport Day from './Day';\nimport { range } from './utils';\n\nconst propTypes = {\n  year: PropTypes.number.isRequired,\n  month: PropTypes.number.isRequired,\n  forceFullWeeks: PropTypes.bool.isRequired,\n  showWeekSeparators: PropTypes.bool.isRequired,\n  selectedDay: momentObj.isRequired,\n  firstDayOfWeek: PropTypes.number.isRequired,\n  selectingRange: PropTypes.arrayOf(momentObj),\n  selectRange: PropTypes.bool.isRequired,\n  selectedRange: PropTypes.arrayOf(momentObj),\n  customClasses: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  dayClicked: PropTypes.func.isRequired,\n  dayHovered: PropTypes.func.isRequired\n};\n\nconst defaultProps = {\n  selectingRange: undefined,\n  selectedRange: undefined,\n  customClasses: undefined\n};\n\nclass Month extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.selectingRange !== undefined) {\n      this.setState({\n        selectingRangeStart: nextProps.selectingRange[0].month(),\n        selectingRangeEnd: nextProps.selectingRange[1].month()\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { month, selectingRange, selectedRange } = this.props;\n    const { selectingRangeStart, selectingRangeEnd } = this.state;\n\n    // full repaint for some global-affecting rendering props\n    if (\n      this.props.year !== nextProps.year ||\n      this.props.forceFullWeeks !== nextProps.forceFullWeeks ||\n      this.props.showWeekSeparators !== nextProps.showWeekSeparators ||\n      this.props.firstDayOfWeek !== nextProps.firstDayOfWeek ||\n      this.props.selectRange !== nextProps.selectRange ||\n      this.props.customClasses !== nextProps.customClasses ||\n      (this.props.selectRange && selectingRange === undefined && nextProps.selectingRange === undefined)\n    ) {\n      return true;\n    }\n\n    // if we get to this point and we are in 'selectRange' mode then it's likely that we have a change in selectingRange\n    if (this.props.selectRange) {\n      if (selectingRange === undefined) {\n        let oldRangeStart = selectedRange[0].month();\n        let oldRangeEnd = selectedRange[1].month();\n        if (oldRangeStart > oldRangeEnd) {\n          [oldRangeStart, oldRangeEnd] = [oldRangeEnd, oldRangeStart];\n        }\n\n        let newRangeStart = nextProps.selectingRange[0].month();\n        let newRangeEnd = nextProps.selectingRange[1].month();\n        if (newRangeStart > newRangeEnd) {\n          [newRangeStart, newRangeEnd] = [newRangeEnd, newRangeStart];\n        }\n\n        // first time it's called, repaint months in old selectedRange and next selectingRange\n        return (oldRangeStart <= month && month <= oldRangeEnd) || (newRangeStart <= month && month <= newRangeEnd);\n      } else if (nextProps.selectingRange === undefined) {\n        // last time it's called, repaint months in previous selectingRange\n        let oldRangeStart = selectingRangeStart;\n        let oldRangeEnd = selectingRangeEnd;\n        if (oldRangeStart > oldRangeEnd) {\n          [oldRangeStart, oldRangeEnd] = [oldRangeEnd, oldRangeStart];\n        }\n\n        let newRangeStart = nextProps.selectedRange[0].month();\n        let newRangeEnd = nextProps.selectedRange[1].month();\n        if (newRangeStart > newRangeEnd) {\n          [newRangeStart, newRangeEnd] = [newRangeEnd, newRangeStart];\n        }\n\n        // called on day hovering changed\n        return (oldRangeStart <= month && month <= oldRangeEnd) || (newRangeStart <= month && month <= newRangeEnd);\n      }\n      // called on day hovering changed\n      let oldRangeStart = selectingRangeStart;\n      let oldRangeEnd = selectingRangeEnd;\n      if (oldRangeStart > oldRangeEnd) [oldRangeStart, oldRangeEnd] = [oldRangeEnd, oldRangeStart];\n\n      let newRangeStart = nextProps.selectingRange[0].month();\n      let newRangeEnd = nextProps.selectingRange[1].month();\n      if (newRangeStart > newRangeEnd) {\n        [newRangeStart, newRangeEnd] = [newRangeEnd, newRangeStart];\n      }\n\n      return (oldRangeStart <= month && month <= oldRangeEnd) || (newRangeStart <= month && month <= newRangeEnd);\n    } else if (this.props.selectedDay.month() === month || nextProps.selectedDay.month() === month) {\n      // single selectedDay changed: repaint months where selectedDay was and where will be\n      return true;\n    }\n\n    return false;\n  }\n\n  dayClicked(day, classes) {\n    const { dayClicked } = this.props;\n    dayClicked(day, classes);\n  }\n\n  dayHovered(day) {\n    const { selectRange, dayHovered } = this.props;\n    if (selectRange) {\n      dayHovered(day);\n    }\n  }\n\n  renderMonthDays() {\n    const {\n      year,\n      month,\n      forceFullWeeks,\n      showWeekSeparators,\n      selectedDay,\n      firstDayOfWeek,\n      selectingRange,\n      selectRange,\n      selectedRange,\n      customClasses\n    } = this.props;\n    const monthStart = moment([year, month, 1]); // current day\n\n    // number of days to insert before the first of the month to correctly align the weekdays\n    let prevMonthDaysCount = monthStart.weekday();\n    while (prevMonthDaysCount < firstDayOfWeek) {\n      prevMonthDaysCount += 7;\n    }\n    // days in month\n    const numberOfDays = monthStart.daysInMonth();\n    // insert days at the end to match up 37 (max number of days in a month + 6)\n    // or 42 (if user prefers seeing the week closing with Sunday)\n    const totalDays = forceFullWeeks ? 42 : 37;\n\n    // day-generating loop\n    const days = [];\n    range(firstDayOfWeek + 1, totalDays + firstDayOfWeek + 1).forEach(i => {\n      const day = moment([year, month, i - prevMonthDaysCount]);\n\n      // pick appropriate classes\n      const classes = [];\n      if (i <= prevMonthDaysCount) {\n        classes.push('prev-month');\n      } else if (i > numberOfDays + prevMonthDaysCount) {\n        classes.push('next-month');\n      } else {\n        if (selectRange) {\n          // selectingRange is used while user is selecting a range\n          // (has clicked on start day, and is hovering end day - but not yet clicked)\n          let start = (selectingRange || selectedRange)[0];\n          let end = (selectingRange || selectedRange)[1];\n\n          // validate range\n          if (end.isBefore(start)) {\n            [end, start] = selectingRange || selectedRange;\n          }\n\n          if (day.isBetween(start, end, 'day', '[]')) {\n            classes.push('range');\n          }\n\n          if (day.isSame(start, 'day')) {\n            classes.push('range-left');\n          }\n\n          if (day.isSame(end, 'day')) {\n            classes.push('range-right');\n          }\n        } else if (day.isSame(selectedDay, 'day')) {\n          classes.push('selected');\n        }\n\n        // call here customClasses function to avoid giving improper classes to prev/next month\n        if (customClasses instanceof Function) {\n          classes.push(customClasses(day));\n        }\n      }\n\n      if ((i - 1) % 7 === 0) {\n        // sunday\n        classes.push('bolder');\n      }\n\n      if (customClasses) {\n        Object.keys(customClasses).forEach(k => {\n          const obj = customClasses[k];\n          // Order here is important! Everything is instance of Object in js\n          if (typeof obj === 'string') {\n            if (obj.indexOf(day.format('ddd')) > -1) {\n              classes.push(k);\n            }\n          } else if (obj instanceof Array) {\n            obj.forEach(d => {\n              if (day.format('YYYY-MM-DD') === d) classes.push(k);\n            });\n          } else if (obj instanceof Function) {\n            if (obj(day)) {\n              classes.push(k);\n            }\n          } else if (obj.start && obj.end) {\n            const startDate = moment(obj.start, 'YYYY-MM-DD').add(-1, 'days');\n            const endDate = moment(obj.end, 'YYYY-MM-DD').add(1, 'days');\n            if (day.isBetween(startDate, endDate)) {\n              classes.push(k);\n            }\n          }\n        });\n      }\n\n      if (showWeekSeparators) {\n        if ((i - 1) % 7 === firstDayOfWeek && days.length) {\n          // push week separator\n          days.push(<td className=\"week-separator\" key={`seperator-${i}`} />);\n        }\n      }\n      days.push(\n        <Day\n          key={`day-${i}`}\n          day={day.isValid() ? day : null}\n          classes={classes.join(' ')}\n          dayClicked={d => this.dayClicked(d, classes.join(' '))}\n          dayHovered={d => this.dayHovered(d)}\n        />\n      );\n    });\n\n    return days;\n  }\n\n  render() {\n    const { month, year } = this.props;\n\n    return (\n      <tr>\n        <td className=\"month-name\">{moment([year, month, 1]).format('MMM')}</td>\n        {this.renderMonthDays()}\n      </tr>\n    );\n  }\n}\n\nMonth.propTypes = propTypes;\nMonth.defaultProps = defaultProps;\n\nexport default Month;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { momentObj } from 'react-moment-proptypes';\nimport Month from './Month';\nimport { range } from './utils';\n\nconst propTypes = {\n  year: PropTypes.number.isRequired,\n  forceFullWeeks: PropTypes.bool,\n  showDaysOfWeek: PropTypes.bool,\n  showWeekSeparators: PropTypes.bool,\n  firstDayOfWeek: PropTypes.number,\n  selectRange: PropTypes.bool,\n  onPickDate: PropTypes.func,\n  onPickRange: PropTypes.func,\n  selectedDay: momentObj,\n  customClasses: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n};\n\nconst defaultProps = {\n  forceFullWeeks: false,\n  showDaysOfWeek: true,\n  showWeekSeparators: true,\n  firstDayOfWeek: 0,\n  selectRange: false,\n  onPickDate: null,\n  onPickRange: null,\n  selectedDay: moment(),\n  customClasses: null\n};\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectingRange: undefined\n    };\n  }\n\n  dayClicked(date, classes) {\n    if (!date) {\n      // clicked on prev or next month\n      return;\n    }\n\n    let { selectingRange } = this.state;\n    const { selectRange, onPickRange, onPickDate } = this.props;\n\n    if (!selectRange) {\n      if (onPickDate instanceof Function) {\n        onPickDate(date, classes);\n      }\n      return;\n    }\n\n    if (!selectingRange) {\n      selectingRange = [date, date];\n    } else {\n      if (onPickRange instanceof Function) {\n        if (selectingRange[0] > date) {\n          onPickRange(date, selectingRange[0]);\n        } else {\n          onPickRange(selectingRange[0], date);\n        }\n      }\n      selectingRange = undefined;\n    }\n\n    this.setState({\n      selectingRange\n    });\n  }\n\n  dayHovered(hoveredDay) {\n    if (!hoveredDay) {\n      // clicked on prev or next month\n      return;\n    }\n\n    const { selectingRange } = this.state;\n\n    if (selectingRange) {\n      selectingRange[1] = hoveredDay;\n\n      this.setState({\n        selectingRange\n      });\n    }\n  }\n\n  renderDaysOfWeek() {\n    const { firstDayOfWeek, forceFullWeeks, showWeekSeparators } = this.props;\n    const totalDays = forceFullWeeks ? 42 : 37;\n\n    const days = [];\n    range(firstDayOfWeek, totalDays + firstDayOfWeek).forEach(i => {\n      const day = moment()\n        .weekday(i)\n        .format('dd')\n        .charAt(0);\n\n      if (showWeekSeparators) {\n        if (i % 7 === firstDayOfWeek && days.length) {\n          // push week separator\n          days.push(<th className=\"week-separator\" key={`seperator-${i}`} />);\n        }\n      }\n      days.push(\n        <th key={`weekday-${i}`} className={i % 7 === 0 ? 'bolder' : ''}>\n          {day}\n        </th>\n      );\n    });\n\n    return (\n      <tr>\n        <th>&nbsp;</th>\n        {days}\n      </tr>\n    );\n  }\n\n  render() {\n    const { selectingRange } = this.state;\n\n    const months = range(0, 12).map(month => (\n      <Month\n        month={month}\n        key={`month-${month}`}\n        dayClicked={(d, classes) => this.dayClicked(d, classes)}\n        dayHovered={d => this.dayHovered(d)}\n        {...this.props}\n        selectingRange={selectingRange}\n      />\n    ));\n\n    return (\n      <table className=\"calendar\">\n        <thead className=\"day-headers\">{this.props.showDaysOfWeek ? this.renderDaysOfWeek() : null}</thead>\n        <tbody>{months}</tbody>\n      </table>\n    );\n  }\n}\n\nCalendar.propTypes = propTypes;\nCalendar.defaultProps = defaultProps;\n\nexport default Calendar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  year: PropTypes.number.isRequired,\n  onPrevYear: PropTypes.func,\n  onNextYear: PropTypes.func,\n  goToToday: PropTypes.func,\n  showTodayButton: PropTypes.bool\n};\n\nconst defaultProps = {\n  onPrevYear: undefined,\n  onNextYear: undefined,\n  goToToday: undefined,\n  showTodayButton: false\n};\n\nconst CalendarControls = props => {\n  const { year, showTodayButton, goToToday, onPrevYear, onNextYear } = props;\n  let todayButton;\n  if (showTodayButton) {\n    todayButton = (\n      <div className=\"control today\" onClick={() => goToToday()}>\n        Today\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"calendar-controls\">\n      <div className=\"control\" onClick={() => onPrevYear()}>\n        &laquo;\n      </div>\n      <div className=\"current-year\">{year}</div>\n      <div className=\"control\" onClick={() => onNextYear()}>\n        &raquo;\n      </div>\n      {todayButton}\n    </div>\n  );\n};\n\nCalendarControls.propTypes = propTypes;\nCalendarControls.defaultProps = defaultProps;\n\nexport default CalendarControls;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport Calendar from './components/YearlyCalendar/Calendar';\nimport CalendarControls from './components/YearlyCalendar/CalendarControls';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nexport { Calendar, CalendarControls };"],"sourceRoot":""}